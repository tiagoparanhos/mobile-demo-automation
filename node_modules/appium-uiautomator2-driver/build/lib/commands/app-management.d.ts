/**
 * Install multiple APKs with `install-multiple` option.
 * @this {AndroidUiautomator2Driver}
 * @param {string[]} apks The list of APKs to install. Each APK should be a path to a apk
 * or downloadable URL as HTTP/HTTPS.
 * @param {import('./types').InstallOptions} [options] Installation options.
 * @throws {Error} if an error occured while installing the given APKs.
 * @returns {Promise<void>}
 */
export function mobileInstallMultipleApks(this: import("../driver").AndroidUiautomator2Driver, apks: string[], options?: import("./types").InstallOptions): Promise<void>;
/**
 * Puts the app to background and waits the given number of seconds then restores the app
 * if necessary. The call is blocking.
 *
 * @this {AndroidUiautomator2Driver}
 * @param {number} [seconds=-1] The amount of seconds to wait between putting the app to background and restoring it.
 * Any negative value means to not restore the app after putting it to background.
 * @returns {Promise<void>}
 */
export function mobileBackgroundApp(this: import("../driver").AndroidUiautomator2Driver, seconds?: number): Promise<void>;
export type AndroidUiautomator2Driver = import("../driver").AndroidUiautomator2Driver;
export type StringRecord<T = any> = import("@appium/types").StringRecord<T>;
//# sourceMappingURL=app-management.d.ts.map